# <!-- Powered by BMAD™ Core -->
template:
  id: story-template-v2
  name: Story Document
  version: 2.0
  output:
    format: markdown
    filename: docs/stories/{{epic_num}}.{{story_num}}.{{story_title_short}}.md
    title: "Story {{epic_num}}.{{story_num}}: {{story_title_short}}"

workflow:
  mode: interactive
  elicitation: advanced-elicitation

agent_config:
  editable_sections:
    - Status
    - Story
    - Acceptance Criteria
    - Tasks / Subtasks
    - Dev Notes
    - Testing
    - Change Log

sections:
  - id: status
    title: Status
    type: choice
    choices: [Draft, Approved, InProgress, Review, Done]
    instruction: Select the current status of the story
    owner: scrum-master
    editors: [scrum-master, dev-agent]

  - id: story
    title: Story
    type: template-text
    template: |
      **As a** {{role}},
      **I want** {{action}},
      **so that** {{benefit}}
    instruction: Define the user story using the standard format with role, action, and benefit
    elicit: true
    owner: scrum-master
    editors: [scrum-master]

  - id: acceptance-criteria
    title: Acceptance Criteria
    type: numbered-list
    instruction: Copy the acceptance criteria numbered list from the epic file
    elicit: true
    owner: scrum-master
    editors: [scrum-master]

  - id: tasks-subtasks
    title: Tasks / Subtasks
    type: bullet-list
    instruction: |
      Break down the story into specific tasks and subtasks needed for implementation.
      MANDATORY: All tasks MUST follow TDD (Test-Driven Development) approach.
      MANDATORY: All infrastructure changes MUST use IaC (Infrastructure as Code) - NO direct Azure changes.
      Reference applicable acceptance criteria numbers where relevant.
    template: |
      - [ ] Write failing tests for Task 1 (TDD FIRST) (AC: # if applicable)
      - [ ] Implement Task 1 to make tests pass (AC: # if applicable)
        - [ ] Subtask1.1...
      - [ ] Write failing tests for Task 2 (TDD FIRST) (AC: # if applicable)
      - [ ] Implement Task 2 to make tests pass (AC: # if applicable)
        - [ ] Subtask 2.1...
      - [ ] Write failing tests for Task 3 (TDD FIRST) (AC: # if applicable)
      - [ ] Implement Task 3 to make tests pass (AC: # if applicable)
        - [ ] Subtask 3.1...
      - [ ] If infrastructure changes needed: Update IaC code ONLY (NO direct Azure changes)
    elicit: true
    owner: scrum-master
    editors: [scrum-master, dev-agent]

  - id: dev-notes
    title: Dev Notes
    instruction: |
      Populate relevant information, only what was pulled from actual artifacts from docs folder, relevant to this story:
      
      CRITICAL REQUIREMENTS:
      - TDD MANDATORY: All code MUST be written test-first (write failing test → implement → make test pass)
      - IaC-FIRST MANDATORY: ALL infrastructure changes MUST be done via IaC (Terraform/ARM/Bicep)
      - NO DIRECT AZURE CHANGES: If something doesn't work, fix the IaC code, not the Azure resource
      - If an issue arises in Azure, the solution is ALWAYS to fix the IaC and redeploy
      
      RESOURCE GROUP NAMING CONVENTION (MANDATORY):
      - Format: e2e-{environment}-{region}-{project}-{component}-{instance}
      - Environment: dev, test, staging, prod
      - Region: eus (East US), wus (West US), neu (North Europe), etc.
      - Project: abbreviated project name (max 10 chars)
      - Component: app, data, network, security, shared, monitoring
      - Instance: 001, 002, 003 (for multiple instances)
      - Example: e2e-prod-eus-secops-app-001
      - All child resources must follow similar hierarchical naming
      
      - Do not invent information
      - If known add Relevant Source Tree info that relates to this story
      - If there were important notes from previous story that are relevant to this one, include them here
      - Put enough information in this section so that the dev agent should NEVER need to read the architecture documents, these notes along with the tasks and subtasks must give the Dev Agent the complete context it needs to comprehend with the least amount of overhead the information to complete the story, meeting all AC and completing all tasks+subtasks
    elicit: true
    owner: scrum-master
    editors: [scrum-master]
    sections:
      - id: testing-standards
        title: Testing
        instruction: |
          List Relevant Testing Standards from Architecture the Developer needs to conform to:
          
          TDD REQUIREMENTS (MANDATORY):
          - Write tests BEFORE implementation code
          - Tests must fail first, then pass after implementation
          - Each feature/function requires corresponding test coverage
          - 100% code coverage required - NO EXCEPTIONS
          
          - Test file location
          - Test standards
          - Testing frameworks and patterns to use
          - Any specific testing requirements for this story
          - Infrastructure tests must validate IaC deployments
        elicit: true
        owner: scrum-master
        editors: [scrum-master]

  - id: change-log
    title: Change Log
    type: table
    columns: [Date, Version, Description, Author]
    instruction: Track changes made to this story document
    owner: scrum-master
    editors: [scrum-master, dev-agent, qa-agent]

  - id: dev-agent-record
    title: Dev Agent Record
    instruction: This section is populated by the development agent during implementation
    owner: dev-agent
    editors: [dev-agent]
    sections:
      - id: agent-model
        title: Agent Model Used
        template: "{{agent_model_name_version}}"
        instruction: Record the specific AI agent model and version used for development
        owner: dev-agent
        editors: [dev-agent]

      - id: debug-log-references
        title: Debug Log References
        instruction: Reference any debug logs or traces generated during development
        owner: dev-agent
        editors: [dev-agent]

      - id: completion-notes
        title: Completion Notes List
        instruction: Notes about the completion of tasks and any issues encountered
        owner: dev-agent
        editors: [dev-agent]

      - id: file-list
        title: File List
        instruction: List all files created, modified, or affected during story implementation
        owner: dev-agent
        editors: [dev-agent]

  - id: qa-results
    title: QA Results
    instruction: Results from QA Agent QA review of the completed story implementation
    owner: qa-agent
    editors: [qa-agent]
